.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "KRB5-STRENGTH-WORDLIST 1"
.TH KRB5-STRENGTH-WORDLIST 1 "2023-12-26" "3.3" "krb5-strength"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
krb5\-strength\-wordlist \- Create a krb5\-strength database from a word list
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fBkrb5\-strength\-wordlist\fR [\fB\-am\fR] [\fB\-c\fR \fIoutput-cdb\fR] [\fB\-l\fR \fImin-length\fR]
    [\fB\-L\fR \fImax-length\fR] [\fB\-o\fR \fIoutput-wordlist\fR] [\fB\-s\fR \fIoutput-sqlite\fR]
    [\fB\-x\fR \fIexclude\fR ...] \fIwordlist\fR
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fBkrb5\-strength\-wordlist\fR converts a word list (a file containing one word
per line) into a database that can be used by the krb5\-strength plugin or
\&\fBheimdal-strength\fR command for checking passwords.  Two database formats
are supported, with different features.  \s-1CDB\s0 is more space-efficient and
possibly faster, but supports checking passwords only against exact
matches or simple transformations (removing small numbers of leading and
trailing characters).  SQLite creates a much larger database, but supports
rejecting any password within edit distance one of a word in the word
list.
.PP
\&\s-1CDB\s0 is a format invented by Dan Bernstein for fast, constant databases.
The database is fixed during creation and cannot be changed without
rebuilding it, and is optimized for very fast access.  For cdb, the
database generated by this program will have keys for each word in the
word list and the constant \f(CW1\fR as the value.
.PP
SQLite stores the word list in a single table containing both each word
and each word reversed.  This allows the krb5\-strength plugin or
\&\fBheimdal-strength\fR command to reject passwords within edit distance one
of any word in the word list.  (Edit distance one means that the word list
entry can be formed by changing a single character of the password, either
by adding one character, removing one character, or changing one character
to a different character.)  However, the SQLite database will be much
larger and lookups may be somewhat slower.
.PP
\&\fBkrb5\-strength\-wordlist\fR takes one argument, the input word list file.
Use the \fB\-c\fR option to specify an output \s-1CDB\s0 file, \fB\-s\fR to specify an
output SQLite file, or \fB\-o\fR to just filter the word list against the
criteria given on the command line and generate a new word list.
The input word list file does not have to be sorted.  See the individual
option descriptions for more information.
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-a\fR, \fB\-\-ascii\fR" 4
.IX Item "-a, --ascii"
Filter all words that contain non-ASCII characters or control characters
from the resulting cdb file, leaving only words that consist solely of
\&\s-1ASCII\s0 non-control characters.
.IP "\fB\-c\fR \fIoutput-cdb\fR, \fB\-\-cdb\fR=\fIoutput-cdb\fR" 4
.IX Item "-c output-cdb, --cdb=output-cdb"
Create a \s-1CDB\s0 database in \fIoutput-cdb\fR.  A temporary file named after
\&\fIoutput-cdb\fR with \f(CW\*(C`.data\*(C'\fR appended will be created in the same directory
and used to stage the database contents.  The actual \s-1CDB\s0 file will be
built using the \fBcdb\fR command, which must be on the user's path.  If
either file already exists, \fBkrb5\-strength\-wordlist\fR will abort with an
error.
.Sp
This option cannot be used with \fB\-o\fR or \fB\-s\fR.
.IP "\fB\-L\fR \fImaximum\fR, \fB\-\-max\-length\fR=\fImaximum\fR" 4
.IX Item "-L maximum, --max-length=maximum"
Filter all words of length greater than \fImaximum\fR from the resulting cdb
database.  The length of each line (minus the separating newline) in the
input word list will be checked against \fIminimum\fR and will be filtered
out of the resulting database if it is shorter.  Useful for generating
password dictionaries from word lists that contain random noise that's
highly unlikely to be used as a password.
.Sp
The default is to not filter out any words for maximum length.
.IP "\fB\-l\fR \fIminimum\fR, \fB\-\-min\-length\fR=\fIminimum\fR" 4
.IX Item "-l minimum, --min-length=minimum"
Filter all words of length less than \fIminimum\fR from the resulting cdb
database.  The length of each line (minus the separating newline) in the
input word list will be checked against \fIminimum\fR and will be filtered
out of the resulting database if it is shorter.  Useful for generating
password dictionaries where shorter passwords will be rejected by a
generic length check and no dictionary lookup will be done for a transform
of the password shorter than the specified minimum.
.Sp
The default is not to filter out any words for minimum length.
.IP "\fB\-m\fR, \fB\-\-man\fR, \fB\-\-manual\fR" 4
.IX Item "-m, --man, --manual"
Print out this documentation (which is done simply by feeding the script to
\&\f(CW\*(C`perldoc \-t\*(C'\fR).
.IP "\fB\-o\fR \fIwordlist\fR, \fB\-\-output\fR=\fIwordlist\fR" 4
.IX Item "-o wordlist, --output=wordlist"
Rather than creating a database, apply the filter rules given by the other
command-line arguments and generate a new word list in the file name given
by the \fIwordlist\fR option.  This can be used to reduce the size of a raw
word list file (such as one taken from Internet sources) by removing the
words that will be filtered out of the dictionary anyway, thus reducing
the size of the source required to regenerate the dictionary.
.Sp
This option cannot be used with \fB\-c\fR or \fB\-s\fR.
.IP "\fB\-s\fR \fIoutput-sqlite\fR, \fB\-\-sqlite\fR=\fIoutput-sqlite\fR" 4
.IX Item "-s output-sqlite, --sqlite=output-sqlite"
Create a SQLite database in \fIoutput-sqlite\fR.  If this file already
exists, \fBkrb5\-strength\-wordlist\fR will abort with an error.  The resulting
SQLite database will have one table, \f(CW\*(C`passwords\*(C'\fR, with two columns,
\&\f(CW\*(C`password\*(C'\fR and \f(CW\*(C`drowssap\*(C'\fR.  The first holds a word from the word list,
and the second holds the same word reversed.
.Sp
Using this option requires the \s-1DBI\s0 and DBD::SQLite Perl modules be
installed.
.Sp
This option cannot be used with \fB\-c\fR or \fB\-o\fR.
.IP "\fB\-x\fR \fIexclude\fR, \fB\-\-exclude\fR=\fIexclude\fR" 4
.IX Item "-x exclude, --exclude=exclude"
Filter all words matching the regular expression \fIexclude\fR from the
resulting cdb database.  This regular expression will be matched against
each line of the source word list after the trailing newline is removed.
This option may be given repeatedly to add multiple exclusion regexes.
.SH "AUTHOR"
.IX Header "AUTHOR"
Russ Allbery <eagle@eyrie.org>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
Copyright 2016, 2020, 2023 Russ Allbery <eagle@eyrie.org>
.PP
Copyright 2013\-2014 The Board of Trustees of the Leland Stanford Junior
University
.PP
Permission is hereby granted, free of charge, to any person obtaining a
copy of this software and associated documentation files (the \*(L"Software\*(R"),
to deal in the Software without restriction, including without limitation
the rights to use, copy, modify, merge, publish, distribute, sublicense,
and/or sell copies of the Software, and to permit persons to whom the
Software is furnished to do so, subject to the following conditions:
.PP
The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.
.PP
\&\s-1THE SOFTWARE IS PROVIDED \*(L"AS IS\*(R", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\s0  \s-1IN NO EVENT SHALL
THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
DEALINGS IN THE SOFTWARE.\s0
.PP
SPDX-License-Identifier: \s-1MIT\s0
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fBcdb\fR\|(1), \s-1DBI\s0, DBD::SQLite
.PP
The cdb file format is defined at <http://cr.yp.to/cdb.html>.
.PP
The current version of this program is available from its web page at
<https://www.eyrie.org/~eagle/software/krb5\-strength/> as part of the
krb5\-strength package.
